// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "sqlite"
  url      = "file:./oauth2.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String    @id @default(cuid())
  email        String    @unique
  firstName    String?
  lastName     String?
  accessToken  String
  refreshToken String?
  admin        Boolean   @default(false)
  isActive     Boolean   @default(true)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  accounts     Account[]
}

model Account {
  id           String        @id @default(cuid())
  userId       String
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  platform     String
  type         String
  name         String
  picture      String?
  platformId   String        @map("platform_id")
  token        String
  parentId     String?
  parent       Account?      @relation("AccountToAccount", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children     Account[]     @relation("AccountToAccount")
  accountPosts AccountPost[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Post {
  id           String        @id @default(cuid())
  text         String?
  link         String?
  attachments  String? // JSON string to store list of attachments
  datetime     DateTime
  accountPosts AccountPost[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model AccountPost {
  id        String   @id @default(cuid())
  postId    String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  accountId String
  account   Account  @relation(fields: [accountId], references: [id], onDelete: Cascade)
  status    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([postId, accountId])
}
